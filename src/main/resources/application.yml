spring:
  server:
    port: 8080
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000
  profiles:
    include: oauth
  security:
    oauth2:
      client:
        registration:
          google:
            client-authentication-method: client_secret_post
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/auth/login/google
#            redirect-uri: http://ec2-3-36-75-32.ap-northeast-2.compute.amazonaws.com:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - openid
              - profile
              - email
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET}
      path:
        ootd: ootd
    region:
      static: ${AWS_REGION}
    stack:
      auto: false
    credentials:
      accessKey: ${AWS_ACCESS_KEY}
      secretKey: ${AWS_SECRET_KEY}